{
  "name": "api-odb",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "export NODE_ENV=development && nest start --watch",
    "win:start:dev": "set NODE_ENV=development && nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "export NODE_ENV=prodction && node dist/main",
    "win:start:prod": "set NODE_ENV=production && node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "ts-node -r tsconfig-paths/register ./node_modules/.bin/typeorm",
    "migration:generate": "cross-env NODE_ENV=development npm run typeorm migration:generate ./src/database/migrations/$npm_config_name -- -d config/typeorm.config.ts",
    "migration:run": "cross-env NODE_ENV=development npm run typeorm migration:run -- -d config/typeorm.config.ts",
    "migration:revert": "cross-env NODE_ENV=development npm run typeorm migration:revert -- -d config/typeorm.config.ts",
    "init:database": "ts-node ./config/initialize-database.ts",
    "init:seed": "ts-node ./config/initialize-seed.ts"
  },
  "dependencies": {
    "@langchain/openai": "^0.0.33",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.2.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/devtools-integration": "^0.1.6",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/mongoose": "^10.0.4",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/platform-socket.io": "^10.3.3",
    "@nestjs/swagger": "^7.3.0",
    "@nestjs/typeorm": "^10.0.2",
    "@nestjs/websockets": "^10.3.3",
    "@types/morgan": "^1.9.9",
    "aspnet-identity-pw": "^1.0.2",
    "bcrypt": "^5.1.1",
    "bwip-js": "^4.3.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "connect-timeout": "^1.9.0",
    "date-fns": "2.30.0",
    "date-fns-tz": "^2.0.1",
    "express-session": "^1.18.0",
    "gpt-3-encoder": "^1.1.4",
    "morgan": "^1.10.0",
    "node-mailjet": "^6.0.5",
    "openai": "^4.42.0",
    "passport": "^0.7.0",
    "passport-google-oauth20": "^2.0.0",
    "passport-jwt": "^4.0.1",
    "pdfkit-table": "^0.1.99",
    "pg": "^8.11.5",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "socket.io": "^4.7.4",
    "stripe": "^15.5.0",
    "swagger": "^0.7.5",
    "ts-node": "^10.9.2",
    "typeorm": "^0.3.20"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/aspnet-identity-pw": "^1.0.33",
    "@types/bcrypt": "^5.0.2",
    "@types/connect-timeout": "^0.0.39",
    "@types/express": "^4.17.17",
    "@types/express-session": "^1.18.0",
    "@types/jest": "^29.5.2",
    "@types/jsonwebtoken": "^9.0.6",
    "@types/multer": "^1.4.11",
    "@types/node": "^20.3.1",
    "@types/node-mailjet": "^3.3.12",
    "@types/passport": "^1.0.16",
    "@types/passport-google-oauth20": "^2.0.15",
    "@types/pdfkit": "^0.13.4",
    "@types/pg": "^8.11.6",
    "@types/supertest": "^2.0.12",
    "@types/xml2js": "^0.4.14",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
